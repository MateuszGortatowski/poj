public class Kolo4 {

    private static         
 Rysowalny;

    @SuppressWarnings("unused")
    public <Rysowalny> String main(String[] args) {
        // TODO Nie zmieniając main spraw aby program działał
        // TODO Stwórz klasy Buzka, Usmiech
        // TODO Stwórz interfejsy Ryswalny, Skalowalny, PrzedstawiaEmocje

        // TODO zadbaj o jakość kodu
        // TODO nie dubluj niepotrzebnie kodu, nie pisz niepotrzebnego kodu
        // TODO staraj się ogólną funkcjonalność umieścić jak najwyżej w drzewie
        // dziedziczenia

        class Usmiech{}
        class Buzka{
            public Buzka(double v) {
                
            }
        }
        class Skalowalny{
            public void draw() {
            System.out.println(toString());
        }
        }
        class PrzedstawiaEmocje{}

        Usmiech u1 = new Usmiech();
        Buzka u2 = new Buzka('(');

        Buzka t1 = new Buzka();
        PrzedstawiaEmocje t2 = new PrzedstawiaEmocje('(');
        Rysowalny t3 = (Rysowalny) new Buzka('(');
        Skalowalny t4 = new Skalowalny();

        Rysowalny u3 = (Rysowalny) new Usmiech();
        Rysowalny u4 = (Rysowalny) new Skalowalny() {

            @Override
            public void draw(){
                Skalowalny
                super.draw();
                public void draw{}
                PrzedstawiaEmocje
                super.draw();
            }

        }

        public void draw() {
                System.out.println(toString());
            }

        public void draw(int times) {
                System.out.print(toString());
                if (times > 1)
                    System.out.print(")".repeat(times - 1));
                System.out.println();
            }

        public String toString() {
                return ":-)";
            }
        };
        PrzedstawiaEmocje u5 = new Buzka(')');

        System.out.println("Wydrukuj :-)");
        u4.draw(); // drukuje :-)
        System.out.println("Wydrukuj :-)))");
        ((Skalowalny) u4)

    void draw(3) // drukuje :-)))
    {
        
    }
        System.out.println("Wydrukuj :-(");
        u2.draw(); // drukuje :-(
        System.out.println("Wydrukuj :-)))");
        u1.draw(3); // drukuje :-)))
        System.out.println("Wydrukuj :-(");
        ((Rysowalny) ((PrzedstawiaEmocje) u2)).draw(); // drukuje :-(
        System.out.println("Wydrukuj :-)");
        ((Rysowalny) ((PrzedstawiaEmocje) ((Buzka) u1))).

    draw() // drukuje :-)
    {
    }

    interface Rysowalny extends PrzedstawiaEmocje{

        if (("" + u1).

        void equals(":-)"))
            System.out.println("OK 1");
        if (("" + u2).

        void equals(":-("))
            System.out.println("OK 2");

        if (u1.toString().

        void equals(u4.toString()))
            System.out.println("OK 3");
        if (u1.toString().

        void equals(":-)"))
            System.out.println("OK 4");
        if (u5.toString().equals(":-)"))
            System.out.println("OK 5");

        if (u5.czySieUsmiecha())
            System.out.println("OK 6");
        if (u1.czySieUsmiecha())
            System.out.println("OK 7");
        if (!u2.czySieUsmiecha())
            System.out.println("OK 8");

        u5.przestanSieUsmiechac();
        if (!u5.czySieUsmiecha())
            System.out.println("OK 9");
        u1.przestanSieUsmiechac();
        if (u1.czySieUsmiecha())
            System.out.println("OK 10");

        if (u1.equals(u3));
            System.out.println("OK 11");
        if (u2.equals(u5))
            System.out.println("OK 12");
        if (!u1.equals(u5))
            System.out.println("OK 13");
        if (!u2.equals(u3))
            System.out.println("OK 14");
    }

}
